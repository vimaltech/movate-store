############################################
# StageÂ 1 â€“ deps                           #
############################################
FROM node:20-alpine AS deps

# Enable Corepack and YarnÂ 4.9.1
RUN corepack enable \
 && corepack prepare yarn@4.9.1 --activate

WORKDIR /app

COPY package.json yarn.lock ./

# ðŸ‘‡ Force Yarn to use the nodeâ€‘modules linker, then install
RUN yarn config set nodeLinker node-modules \
 && yarn install --immutable


############################################
# StageÂ 2 â€“ build                          #
############################################
FROM node:20-alpine AS builder

RUN corepack enable \
 && corepack prepare yarn@4.9.1 --activate \
 && yarn config set nodeLinker node-modules  # ensure same linker

WORKDIR /app

COPY --from=deps /app/node_modules ./node_modules
COPY . .

RUN yarn build


############################################
# StageÂ 3 â€“ runtime                        #
############################################
FROM node:20-alpine

RUN corepack enable \
 && corepack prepare yarn@4.9.1 --activate \
 && yarn config set nodeLinker node-modules

WORKDIR /app
ENV NODE_ENV=production

COPY --from=builder /app ./

EXPOSE 9000
CMD ["sh","-c","medusa migrations run && yarn start"]
